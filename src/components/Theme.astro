---
---

<button id="button">
    <svg id="light" height="1.5rem" viewBox="0 0 24 24">
        <path d="M12,15.27a3.24,3.24,0,0,0,3.27-3.21V12a3.24,3.24,0,0,0-3.21-3.27H12a3.24,3.24,0,0,0-3.27,3.21V12a3.24,3.24,0,0,0,3.21,3.27Zm0,2.18A5.43,5.43,0,0,1,6.55,12v0A5.43,5.43,0,0,1,12,6.55h0A5.43,5.43,0,0,1,17.45,12v0A5.43,5.43,0,0,1,12,17.45ZM1.09,13.09a1.09,1.09,0,0,1,0-2.18H3.27a1.09,1.09,0,1,1,0,2.18Zm19.64,0a1.09,1.09,0,0,1,0-2.18h2.18a1.09,1.09,0,0,1,0,2.18ZM12,4.36a1.05,1.05,0,0,1-1.09-1V1.09a1.09,1.09,0,1,1,2.18,0V3.27a1.05,1.05,0,0,1-1,1.09ZM12,24a1.05,1.05,0,0,1-1.09-1V20.73a1.09,1.09,0,0,1,2.18,0v2.18a1.06,1.06,0,0,1-1,1.09ZM5.07,6.6,3.9,5.45a.91.91,0,0,1-.31-.76A1.17,1.17,0,0,1,3.9,3.9a1.07,1.07,0,0,1,.79-.33,1,1,0,0,1,.76.33L6.6,5.07a1.1,1.1,0,0,1,.3.77,1.12,1.12,0,0,1-.3.76.94.94,0,0,1-.75.31A1.13,1.13,0,0,1,5.07,6.6ZM18.55,20.1,17.4,18.93a1.12,1.12,0,0,1-.3-.78,1,1,0,0,1,.3-.75.94.94,0,0,1,.75-.31,1.13,1.13,0,0,1,.78.31l1.17,1.15a.91.91,0,0,1,.31.76,1.17,1.17,0,0,1-.31.79,1.11,1.11,0,0,1-.79.33A1,1,0,0,1,18.55,20.1ZM17.4,6.6a.94.94,0,0,1-.31-.75,1.13,1.13,0,0,1,.31-.78L18.55,3.9a.91.91,0,0,1,.76-.31,1.17,1.17,0,0,1,.79.31,1.07,1.07,0,0,1,.33.79,1,1,0,0,1-.33.76L18.93,6.6a1.1,1.1,0,0,1-.77.3A1.12,1.12,0,0,1,17.4,6.6ZM3.9,20.1a1.07,1.07,0,0,1-.33-.79,1,1,0,0,1,.33-.76L5.07,17.4a1.12,1.12,0,0,1,.78-.3,1,1,0,0,1,.75.3.94.94,0,0,1,.31.75,1.13,1.13,0,0,1-.31.78L5.45,20.1a.91.91,0,0,1-.76.31A1.17,1.17,0,0,1,3.9,20.1Z"/>
    </svg>
    <svg id="dark" height="1.5rem" viewBox="0 0 24 24">
        <path d="M12,21.8a9.48,9.48,0,0,1-7-2.85A9.48,9.48,0,0,1,2.2,12,9.5,9.5,0,0,1,4.66,5.45a9.6,9.6,0,0,1,6.27-3.23,1,1,0,0,1,.63.09,1.18,1.18,0,0,1,.43.4,1.07,1.07,0,0,1,.18.57,1,1,0,0,1-.2.63,5.39,5.39,0,0,0-.7,1.5A6,6,0,0,0,11,7.07a5.64,5.64,0,0,0,1.72,4.17A5.64,5.64,0,0,0,16.93,13a6.09,6.09,0,0,0,1.68-.24A5.3,5.3,0,0,0,20.09,12a1.1,1.1,0,0,1,.62-.17,1.29,1.29,0,0,1,.56.15.92.92,0,0,1,.42.41,1,1,0,0,1,.09.65,9.28,9.28,0,0,1-3.2,6.25A9.65,9.65,0,0,1,12,21.8Zm0-2.18a7.33,7.33,0,0,0,4.31-1.33,7.63,7.63,0,0,0,2.78-3.45,10.52,10.52,0,0,1-1.09.22,6.67,6.67,0,0,1-1.09.08,7.74,7.74,0,0,1-5.71-2.36A7.74,7.74,0,0,1,8.86,7.07,6.67,6.67,0,0,1,8.94,6a10.52,10.52,0,0,1,.22-1.09A7.63,7.63,0,0,0,5.71,7.67,7.33,7.33,0,0,0,4.38,12a7.36,7.36,0,0,0,2.24,5.4A7.36,7.36,0,0,0,12,19.62Z"/>
    </svg>
</button>

<script is:inline>
    const primaryColorScheme = ""; // "light" | "dark"

    // Get theme data from local storage
    const currentTheme = localStorage.getItem("theme");

    function getPreferTheme() {
    // Return theme value in local storage if it is set
    if (currentTheme) return currentTheme;

    // Return primary color scheme if it is set
    if (primaryColorScheme) return primaryColorScheme;

    // Return user device's preferred color scheme
    return window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light";
    }

    let themeValue = getPreferTheme();

    function setPreference() {
        localStorage.setItem("theme", themeValue);
        reflectPreference();
    }

    function reflectPreference() {
        document.firstElementChild.setAttribute("data-theme", themeValue);
        
        document.querySelector("#button");
        
        // Get a reference to the body element
        const body = document.body;
        
        // Check if the body element exists before using getComputedStyle
        if (body) {
            // Get the computed styles for the body element
            const computedStyles = window.getComputedStyle(body);
            
            // Get the background color property
            const bgColor = computedStyles.backgroundColor;
            
            // Set the background color in <meta theme-color ... />
            document
                .querySelector("meta[name='theme-color']")
                ?.setAttribute("content", bgColor);
            }
        }

    // Set early so no page flashes / CSS is made aware
    reflectPreference();

    window.onload = () => {
        function setTheme() {
            // Set on load so screen readers can get the latest value on the button
            reflectPreference();
            
            // Now this script can find and listen for clicks on the control
            document.querySelector("#button")?.addEventListener("click", () => {
                themeValue = themeValue === "light" ? "dark" : "light";
                setPreference();
            });
        }
        
        setTheme();
        
        // Run on view transitions navigation
        document.addEventListener("astro:after-swap", setTheme);
    };
    
    // Sync with system changes
    window
        .matchMedia("(prefers-color-scheme: dark)")
        .addEventListener("change", ({ matches: isDark }) => {
            themeValue = isDark ? "dark" : "light";
            setPreference();
            });
</script>